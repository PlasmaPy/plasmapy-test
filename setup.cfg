[metadata]
name = plasmapy-test-helpers
provides = plasmapy_test_helpers
author = PlasmaPy Developers
description = Test helper functionality for PlasmaPy and related packages
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD+Patent
license_file = LICENSE.md
url = https://www.plasmapy.org
edit_on_github = True
github_project = PlasmaPy/plasmapy-test-helpers
keywords=testing
classifiers=
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: Implementation :: CPython

[options]
python_requires = >=3.7
packages = find:
include_package_data = True
setup_requires =
  # PEP-518 encourages the use of pyproject.toml for defining
  # build dependencies...they should be defined under build-system.requires
install_requires =
  # ought to mirror requirements/install.txt
  astropy >= 4.0
  numpy >= 1.17
  setuptools >= 41.2

[options.extras_require]
extras =
  setuptools_scm

tests =
  %(extras)s
  pytest >= 5.1

docs =
  # ought to mirror requirements/docs.txt
  %(extras)s
  docutils < 0.17
  numpydoc
  pillow
  pygments >= 2.4.1
  sphinx >= 3.2.0
  sphinx-copybutton
  sphinx-gallery
  sphinx_rtd_theme
developer =
  # install everything for developers
  # ought to functionally mirror requirements.txt
  %(docs)s
  %(extras)s
  %(tests)s
all =
  # for "backwards compatibility" in terms of install instructions
  # "all" in the sense of "all optional requirements"
  %(extras)s

[options.packages.find]
exclude = docs/automodapi

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 5.1
testpaths = "plasmapy_test_helpers"
norecursedirs = "build" "docs/"
doctest_optionflags =
    NORMALIZE_WHITESPACE
    ELLIPSIS
    NUMBER
addopts = --doctest-modules --doctest-continue-on-failure
filterwarnings =
    ignore:.*Creating a LegacyVersion.*:DeprecationWarning
looponfailroots =
    plasmapy_test_helpers

[flake8]
convention = numpy
extend-ignore =
    D105,
    D107,
    D202,
    D205,
    D302,
    D400,
    D403,
    E203,
    E501,
    E731,
    F401,
    F405,
    W605,
    RST210,
    RST213,
    RST306
exclude =
    extern,
    sphinx,
    *test*,
    *parsetab.py,
    conftest.py,
    docs/conf.py,
    setup.py,
    .jupyter
rst-roles =
    attr
    class
    confval
    data
    event
    exc
    file
    func
    meth
    mod
    ref
    rst:dir
rst-directives =
    confval
    deprecated
    event
    nbgallery
    rst:directive
    todo

[coverage:run]
omit =
    ci-helpers/*
    */tests/*
    */setup_package.py
    */version.py

[coverage:report]
exclude_lines =
    coverage: ignore
    ImportError
    ModuleNotFoundError
    @vectorize
    @numba.vectorize
